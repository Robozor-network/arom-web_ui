{% extends "../../base.hbs" %}
{% block head %}
    {% import glob %}

    <link href="/static/jsoneditor/dist/jsoneditor.min.css" rel="stylesheet" type="text/css">
    <script src="/static/jsoneditor/dist/jsoneditor.min.js"></script>

    <style type="text/css">
        .jsoneditor-menu{
            background-color: gray;
            border-color: black;
        }

        .jsoneditor{
            border-color: black;
        }

    </style>

{% end %}

{% block content %}

    <script type="text/javascript">
        var cfg_json = [];
        var cfg_edit = null;
        var cfg_file = '{{current_file}}'
    </script>
    
    <div class="row">
            <h3>Json structure</h3>


            <div style="width: 100%;" class="jsoneditor-menu">
                <div class="input-group input-group-sm">
                    <div class="input-group-btn">
                        <button type="button" class="btn btn-secondary btn-danger" onclick="load_json()">Reload</button>
                        <button id="btn-save" type="button" class="btn btn-success" onclick="push_json()">Save</button>
                        <button type="button" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Open</button>
                        <div class="dropdown-menu">
                            {% for file in glob.glob("/home/odroid/robozor/station/pymlab_presets/*.json")%}
                                <a class="dropdown-item" id="{{file}}.json" onclick="load_json('{{file}}')"> {{file}} </a>
                            {% end %}
                        </div>
                    </div>
                    <div class="input-group input-group-sm">
                        <input type="text" class="form-control" id="config_location" value="">
                    </div>
                    <div class="input-group-btn">
                        <button type="button" class="btn btn-secondary btn-danger" onclick="pymlab_use_cfg()">Use</button>
                        <button type="button" class="btn btn-secondary btn-danger" onclick="pymlab_init()">Init</button>
                    </div>
                </div>
            </div>
            <div id="jsoneditor" style="width: 100%; min-height: 500px;"></div>
    </div>






    <script>
        // create the editor
        var container = document.getElementById("jsoneditor");
        var options = {
            mode: 'tree',
            modes: ['code', 'form', 'text', 'tree', 'view'],
            templates: [{
                    text: 'Pymlab device',
                    title: 'Insert a new pymlab device',
                    className: 'Object',
                    value: {
                        'type': 'I2C_device',
                        'name': 'device_name',
                        'address': 0
                    }
            },{
                    text: 'Pymlab bus',
                    title: 'Insert a new pymlab bus',
                    className: 'Object',
                    value: {
                        'children': [],
                        'name': 'bus0',
                        'port': '0',
                        'device': 'hid'
                    }
            }]
        };
        cfg_edit = new JSONEditor(container, options);
        cfg_edit.set(cfg_json);
        //var json = editor.get();
    </script>

<script type="text/javascript">


    function load_json(file = false){
        if (file == false){
            file = cfg_file;
        }else{
            cfg_file = file;
        }
        $.ajax({
            url: "/node/pymlab_node",
            method: "POST",   
            async: false,     
            data: {
                operation: 'get_json',
                file: file
            },
            success: function(data){
                console.log(data);
                cfg_json = data;
                setCfgField();
                $('#config_location').val(file);
            },
            error: function(errMsg) {
                console.log(errMsg)
            }
        });
    }


    function push_json(){
        $.ajax({
            url: "/node/pymlab_node",
            method: "POST",   
            async: false,     
            data: {
                operation: 'push_json',
                file: $('#config_location').val(),
                data: JSON.stringify(cfg_edit.get()),
            },
            success: function(data){
                console.log(data);
            },
            error: function(errMsg) {
                console.log(errMsg)
            }
        });

    }


    function setCfgField(){
        cfg_edit.set(cfg_json);
        cfg_edit.expandAll();
    }


    $( document ).ready(function() {
        load_json('{{current_file}}');
        setCfgField();
    });



    function pymlab_init(){
        var pymlab_init = new ROSLIB.Service({
            ros : ros,
            name : '/pymlab_init',
            serviceType : 'arom/PymlabInit'
        });

        var request = new ROSLIB.ServiceRequest({
            config: document.getElementById("config_location").value,
            default : 1
        });

        pymlab_init.callService(request, function(result) {
            console.log('Result for service call on ' + pymlab_init.name + ': '+ result.sum);
        });
          
    };


</script>










{#


    <div class="form-group row">
        <label for="chart-container" class="col-2 col-form-label">Pymlab wiring</label>
        <div class="card">
            <div class="card-block" style="padding: 0px;">
                <div id="chart-container" style="width: 100%; min-height: 100%;"></div>
            </div>
        </div>
    </div>



    <div class="form-group row">
        <label for="json" class="col-2 col-form-label">Device setting</label> 
        <div class="col-12">
            <textarea id="json" class="form-control" rows=10 disabled>Vyberte zařízení ze schématu výše
            </textarea>
        </div>
    </div>


    <div class="form-group row">
        <label for="json_whole" class="col-2 col-form-label">Whole schema</label> 
        <div class="col-12"> <textarea id="json_whole" class="form-control" rows=50>{{open(FeatureParams['cfg'], 'r').read()}}</textarea>
    </div></div>

{%if current_user %} {% if current_user['level'] > 4%}
        <div class="input-group">

            <div class="input-group-btn">
                <div class="btn-group" role="group" aria-label="Basic example">
                    <button id="btn-save" type="button" class="btn btn-success">Save changes</button>
                </div>
            </div>

            <div class="input-group-btn">
                <button type="button" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Existující nastavení
                </button>
                <div class="dropdown-menu">
                    {% for file in glob.glob("/home/odroid/robozor/station/pymlab_presets/*.json")%}
                        <a class="dropdown-item" id="{{file}}.json" onclick="LoadNewConfig('{{file}}')"> {{file}} </a>
                    {% end %}
                </div>
            </div>


            <input type="text" class="form-control" id="config_location" value="{{FeatureParams['cfg']}}">

        </div>

        <br>
        <button type="button" class="btn btn-danger" id="btn-initPymlab" data-toggle="modal" data-target="#Modal_InitPymlab">
          Init PyMLAB
        </button>

<!-- Modal - pro potvrzení při kliknutí na initPymlab -->
        <div class="modal fade" id="Modal_InitPymlab" tabindex="-1" role="dialog">
          <div class="modal-dialog" role="document">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="#pymlabModal">Inicializovat pymlab</h5>
              </div>
              <div class="modal-body">
                Opravdu chceš inicializovat pymlab (ROSpymlabServer)? Můžeš tím rozbít fungující komunikaci se zařízeními a popřípadě použít špatné zapojení pymlabu.... Zkontroluj si to, prosím:)<br>

                Máte vybraný soubor: (zatím tady nic není - proste ten, co je uplne dole v tom radku)
              </div>
              <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Zrušit</button>
                <button type="button" class="btn btn-primary" id="btn-initPymlabAccepted">Inicializovat</button>
              </div>
            </div>
          </div>
        </div>
{% end %}{% end %}


<script type="text/javascript">
//'use strict';

    (function($){

        var $chart = $('.orgchart');
        $('.orgchart').css('transform','');
        $('.orgchart').addClass('noncollapsable')
        $(function() {
            
            var datasource = JSON.parse(document.getElementById("json_whole").value);

            $('#chart-container').orgchart({
                'data' : datasource,
                'depth': 10,
                'nodeContent': 'title',
                'pan': true,
                'exportButton': false,
                'exportFilename': 'PymlabWiringAROM',
                'exportFileextension': 'pdf',
                //'direction': 'l2r',
                'createNode': function($node, data) {
                    //console.log($node)
                    //console.log(data)
                    $node[0].id = data['name'];
                    $node[0].param = data;
                }
            })

            .on('click', '.node', function() {

                var $this = $(this);
                document.getElementById('json').innerHTML = JSON.stringify($('#chart-container').orgchart('getNodeParams', $this.find('.title')), undefined, 4);

            })

        });
    })(jQuery);


    function ExportSchema(){
        var hierarchy = $('#chart-container').orgchart('getHierarchy', "param");
        document.getElementById("json_whole").value = JSON.stringify(hierarchy, null, 4);
        return hierarchy
    }


    $('#btn-export').on('click', function() {
        var hierarchy = $('#chart-container').orgchart('getHierarchy', "param");
        document.getElementById("json_whole").value = JSON.stringify(hierarchy, null, 4);
    });


    $('#btn-save').on('click', function(){
        console.log("zmáčknuto btn save");
        $.ajax({
            type: 'PUT',
            dataType: 'json',
            url: "/api/upload/"+document.getElementById("config_location").value,
            headers: {"X-HTTP-Method-Override": "PUT"},
            data: document.getElementById("json_whole").value
        });
        location.reload();
    });

    $('#btn-initPymlabAccepted').on('click', function(){
        console.log("zmacknuto");

        var pymlab_init = new ROSLIB.Service({
            ros : ros,
            name : '/pymlab_init',
            serviceType : 'arom/PymlabInit'
        });

        var request = new ROSLIB.ServiceRequest({
            config: document.getElementById("config_location").value,
            default : 1
        });

        pymlab_init.callService(request, function(result) {
            console.log('Result for service call on ' + pymlab_init.name + ': '+ result.sum);
        });
          
    });

    $('#json_whole').on('change',function(){

    });

    function LoadNewConfig(file){
        document.getElementById("config_location").value = file;

        var param_pymlab_cfg = new ROSLIB.Param({
          ros : ros,
          name: '/arom/node/pymlab_node/feature/pymlab_structure/cfg'
        });
        pymlab_structure.set(file);
        param_pymlab_cfg.set(file);
        location.reload();
    }

    function IsJsonValid(str) {
        try {
            JSON.parse(str);
            return true;
        } catch (e) {
            return false;
        }
    }




    $( document ).ready(function() {
        //ExportSchema();
        //document.getElementById("json_whole").value = JSON.stringify(JSON.parse(document.getElementById("json_whole").value), undefined, 4);
    });

</script>




    <script>
        // create the editor
        var container = document.getElementById("jsoneditor");
        var options = {};
        var pymlab_structure = new JSONEditor(container, options);

        pymlab_structure.set(JSON.parse(document.getElementById("json_whole").value));

        // get json
        var json = editor.get();
    </script>#}

{% end %}